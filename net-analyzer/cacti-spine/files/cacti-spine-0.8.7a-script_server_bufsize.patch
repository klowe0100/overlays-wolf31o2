diff -urN cacti-spine-0.8.7a.orig/php.c cacti-spine-0.8.7a/php.c
--- cacti-spine-0.8.7a.orig/php.c	2007-11-25 19:40:21.000000000 -0800
+++ cacti-spine-0.8.7a/php.c	2008-08-20 18:34:48.000000000 -0700
@@ -49,13 +49,13 @@
  */
 char *php_cmd(const char *php_command, int php_process) {
 	char *result_string;
-	char command[BUFSIZE];
+	char command[BIG_BUFSIZE];
 	int write_status;
 
 	assert(php_command != 0);
 
 	/* pad command with CR-LF */
-	snprintf(command, BUFSIZE, "%s\r\n", php_command);
+	snprintf(command, BIG_BUFSIZE, "%s\r\n", php_command);
 
 	/* place lock around mutex */
 	switch (php_process) {
@@ -146,7 +146,7 @@
 	char *cp;
 	char *bptr;
 
-	if (!(result_string = (char *)malloc(BUFSIZE))) {
+	if (!(result_string = (char *)malloc(BIG_BUFSIZE))) {
 		die("ERROR: Fatal malloc error: php.c php_readpipe!");
 	}
 	result_string[0] = '\0';
@@ -220,7 +220,7 @@
 		bptr = result_string;
 
 		while (1) {
-			i = read(php_processes[php_process].php_read_fd,bptr,BUFSIZE-(bptr-result_string));
+			i = read(php_processes[php_process].php_read_fd,bptr,BIG_BUFSIZE-(bptr-result_string));
 
 			if (i <= 0) {
 				SET_UNDEFINED(result_string);
@@ -240,7 +240,7 @@
 				break;
 			}
 
-			if (bptr >= result_string+BUFSIZE) {
+			if (bptr >= result_string+BIG_BUFSIZE) {
 				SPINE_LOG(("ERROR: SS[%i] The Script Server result was longer than the acceptable range\n", php_process));
 				SET_UNDEFINED(result_string);
 			}

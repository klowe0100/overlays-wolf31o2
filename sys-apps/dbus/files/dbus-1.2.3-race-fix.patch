diff --git a/bus/driver.c b/bus/driver.c
index 2519626..96542ff 100644
--- a/bus/driver.c
+++ b/bus/driver.c
@@ -165,6 +165,13 @@ bus_driver_send_service_acquired (DBusCo
       return FALSE;
     }
 
+#ifdef DBUS_BUILD_TESTS
+  if (_dbus_getenv ("DBUS_TEST_RACE"))
+    {
+      _dbus_sleep_milliseconds (500);
+    }
+#endif
+  
   if (!bus_transaction_send_from_driver (transaction, connection, message))
     {
       dbus_message_unref (message);
diff --git a/dbus/dbus-transport-socket.c b/dbus/dbus-transport-socket.c
index 10b671c..2389db5 100644
--- a/dbus/dbus-transport-socket.c
+++ b/dbus/dbus-transport-socket.c
@@ -906,6 +906,22 @@ socket_disconnect (DBusTransport *transp
   _dbus_verbose ("%s\n", _DBUS_FUNCTION_NAME);
   
   free_watches (transport);
+
+#ifdef DBUS_BUILD_TESTS
+  if (_dbus_getenv ("DBUS_TEST_RACE"))
+    {
+      DBusPollFD poll_fd;
+      int poll_res;
+
+      poll_fd.fd = socket_transport->fd;
+      poll_fd.events = _DBUS_POLLIN;
+      poll_res = _dbus_poll (&poll_fd, 1, 0);
+      if (poll_res >= 0 && poll_fd.revents & _DBUS_POLLIN)
+        {
+          _dbus_assert_not_reached ("discarding un-read data on socket about to be closed");
+        }
+    }
+#endif
   
   _dbus_close_socket (socket_transport->fd, NULL);
   socket_transport->fd = -1;
